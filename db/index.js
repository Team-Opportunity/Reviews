const mongoose = require('mongoose');
mongoose.connect('mongodb://localhost/Reviews');

//for seeded data, will keep the given id's in the review and characteristics fields. If we come across duplicate id's overwrite the input review id with the autogenerated mongo ObjectId

let reviewSchema = mongoose.Schema({
  review_id: String,
  product_id: String,
  rating: Number,
  summary: String,
  recommend: Boolean,
  response: String,
  body: String,
  date: Number,
  reviewer_name: String,
  helpfulness: Number,
  photos: [{
    id: Number,
    url: String}],
  reported: Boolean
});

let metadataSchema = mongoose.Schema({
  product_id: String,
  numReviews: Number,
  ratings: {
    1: Number,
    2: Number,
    3: Number,
    4: Number,
    5: Number
  },
  recommended: {
    0: Number,
    1: Number
  },
  comfort: {
    id: String,
    value: String
  },
  fit: {
    id: String,
    value: String
  },
  length: {
    id: String,
    value: String
  },
  quality: {
    id: String,
    value: String
  }
})

let Review = mongoose.model('Review', reviewSchema);
let Metadata = mongoose.model('Metadata', metadataSchema);

module.exports.Review = Review;
module.exports.Metadata = Metadata;
